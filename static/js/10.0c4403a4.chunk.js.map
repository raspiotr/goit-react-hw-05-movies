{"version":3,"file":"static/js/10.0c4403a4.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","components/TitlesList/TitlesList.jsx","js/api.js","webpack://goit-react-hw-05-movies/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Loader\":\"Loader_Loader__wqo9C\"};","import { Oval } from 'react-loader-spinner';\nimport css from './Loader.module.css';\n\nexport const Loader = () => {\n  return (\n    <div className={css.Loader}>\n      <Oval\n        height={100}\n        width={100}\n        color=\"#4fa94d\"\n        visible={true}\n        ariaLabel=\"oval-loading\"\n        secondaryColor=\"#4fa94d\"\n        strokeWidth={2}\n        strokeWidthSecondary={2}\n      />\n    </div>\n  );\n};\n","import { useLocation, Link } from 'react-router-dom';\n\nexport const TitlesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <div>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import axios from 'axios';\n\nconst API_KEY = 'bbc7a6a5746daf74b8073dd6ff8b49f7';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nconst fetchSearchMovies = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n\nconst fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchMovieActors = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nconst fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\nexport {\n  fetchTrending,\n  fetchSearchMovies,\n  fetchMovieDetails,\n  fetchMovieActors,\n  fetchMovieReviews,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Searchbar\":\"Searchbar_Searchbar__5WKzV\",\"SearchForm\":\"Searchbar_SearchForm__XuPyK\",\"SearchFormButton\":\"Searchbar_SearchFormButton__dksRa\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__7AAWA\",\"SearchFormInput\":\"Searchbar_SearchFormInput__FT6Bx\"};","import { useState } from 'react';\nimport css from './Searchbar.module.css';\nimport PropTypes from 'prop-types';\n\nexport const Searchbar = props => {\n  const { onSubmit } = props;\n  const [query, setQuery] = useState('');\n\n  const handleChange = event => {\n    setQuery(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit(query);\n  };\n\n  return (\n    <header className={css.Searchbar}>\n      <form className={css.SearchForm} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={css.SearchFormButton}>\n          <span className=\"SearchFormButtonLabel\"></span>\n        </button>\n\n        <input\n          className={css.SearchFormInput}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movie\"\n          value={query}\n          onChange={handleChange}\n        />\n      </form>\n    </header>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../../components/Loader/Loader';\nimport { Searchbar } from '../../components/Searchbar/Searchbar';\nimport { TitlesList } from '../../components/TitlesList/TitlesList';\nimport { fetchSearchMovies } from 'js/api';\nimport Notiflix from 'notiflix';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n\n    async function loadSearchMovies() {\n      try {\n        setIsLoading(true);\n        const response = await fetchSearchMovies(query);\n        if (response.length === 0) {\n          Notiflix.Notify.warning(\n            'Sorry, there are no movies matching your search query. Please try again.'\n          );\n          return;\n        }\n        setMovies(response);\n      } catch (error) {\n        Notiflix.Notify.failure(\n          'Ooops... Something went wrong! Please, try again.'\n        );\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    loadSearchMovies();\n  }, [query]);\n\n  const handleSearch = myQuery => {\n    setQuery(myQuery);\n    setMovies([]);\n  };\n\n  return (\n    <main>\n      <Searchbar onSubmit={handleSearch} />\n      {<TitlesList movies={movies} />}\n      {isLoading && <Loader />}\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["Loader","_jsx","className","css","children","Oval","height","width","color","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","TitlesList","_ref","movies","location","useLocation","map","movie","Link","to","concat","id","state","from","title","API_KEY","axios","fetchTrending","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","results","stop","apply","arguments","fetchSearchMovies","_ref2","_callee2","keyword","_context2","_x","Searchbar","props","onSubmit","_useState","useState","_useState2","_slicedToArray","query","setQuery","_jsxs","event","preventDefault","type","autoComplete","autoFocus","placeholder","value","onChange","target","setMovies","_useState3","_useState4","_useState5","_useState6","isLoading","setIsLoading","useEffect","_loadSearchMovies","length","Notiflix","t0","finish","loadSearchMovies","myQuery"],"sourceRoot":""}